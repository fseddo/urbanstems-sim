# Generated by Django 5.0.8 on 2025-09-04 13:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Occasion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(help_text='Original ID from scraped data', max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('variant_type', models.CharField(blank=True, choices=[('single', 'Single'), ('double', 'Double'), ('triple', 'Triple')], max_length=10, null=True)),
                ('base_name', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('price', models.PositiveIntegerField(blank=True, help_text='Price in cents', null=True)),
                ('discounted_price', models.PositiveIntegerField(blank=True, help_text='Discounted price in cents', null=True)),
                ('main_image', models.URLField(blank=True, null=True)),
                ('hover_image', models.URLField(blank=True, null=True)),
                ('badge_text', models.CharField(blank=True, max_length=100, null=True)),
                ('delivery_lead_time', models.PositiveIntegerField(blank=True, help_text='Lead time in days', null=True)),
                ('stock', models.PositiveIntegerField(default=0)),
                ('reviews_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('reviews_count', models.PositiveIntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('care_instructions', models.TextField(blank=True, null=True)),
                ('main_detail_src', models.URLField(blank=True, null=True)),
                ('is_main_detail_video', models.BooleanField(default=False)),
                ('detail_image_1_src', models.URLField(blank=True, null=True)),
                ('detail_image_2_src', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['variant_type'], name='products_pr_variant_a89933_idx'), models.Index(fields=['base_name'], name='products_pr_base_na_454c81_idx'), models.Index(fields=['price'], name='products_pr_price_9b1a5f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('product', 'category')},
            },
        ),
        migrations.CreateModel(
            name='ProductCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.collection')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('product', 'collection')},
            },
        ),
        migrations.CreateModel(
            name='ProductOccasion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occasion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.occasion')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
            ],
            options={
                'unique_together': {('product', 'occasion')},
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('double_variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='double_variants', to='products.product')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('single_variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='single_variants', to='products.product')),
                ('triple_variation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='triple_variants', to='products.product')),
            ],
            options={
                'unique_together': {('product',)},
            },
        ),
    ]
